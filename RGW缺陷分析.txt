ceph rgw存在如下问题：

1. BI使用rados对象保存，不支持增量恢复，在故障恢复时影响可用性 （使用backfill恢复机制后暂时得到缓解）

2. 不能很好的支持bucket跨故障域和多集群,扩展性受限。 异构集群，冷热pool等。

    bucket与pool绑定，在扩展性和使用的灵活性上存在限制。

3. 海量小文件直接使用rados存储代价太大。

4，多版本，multisite等特性复杂度不合适（非常重要，这决定了后续大量特性开发的复杂度）

5，无法支持高效的list操作

6，rgw put写放大，尤其是在多版本情况下。


为了解决上述问题，考虑调整rgw架构：

1，BI作为单独的一层，而不仅是实现bucket list，以及统计功能的附属。

     BI作为对象的元数据存储，可以使用rados，也可以使用其他数据库（以优化问题1，5)

     在此基础上实现小文件合并也相对容易 （问题3）
     

2，底层采用多版本机制，统一非多版本bucket与多版本bucket的实现，简化逻辑。

     针对上述问题4，6