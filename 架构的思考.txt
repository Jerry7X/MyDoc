1，架构就是管理复杂性
2，架构就像积木，本质就是把无序变成有序，做熵减工作
3，还有理解问题，得到这些积木，对每个积木有准确的理解。积木不存在重复，正交的。


软件架构的定义: "软件架构代表了一个系统的组织结构， 这包括将系统分解为不同的部分，界定它们之间的连接，确定它们之间的交换机制，并且为后续的设计提供指导性的原则"
英文版：
the fundamental organization of a system, embodied in its components,
their relationships to each other and the environment, and the principles
governing its design and evolution.

这些部分是如何划分的？功能？概念？实体？组件？

先定义清楚，那些需要share understanding和hard to change的东西。
分层，解耦，并行。


架构最大的挑战就是变化，思考系统在哪些方向上发生变化。
不要高估人的能力，一般系统涉及很多组件，概念时。人就会懵逼。
人解决这种问题的方法就是抽象，把相似的东西归为一类，降低复杂度。

常用架构的思考。

如何科学的进行架构设计，而不是依赖于经验。

如何构建自组织的团队？

架构需要考虑业务架构，人力架构，技术架构。
一个数据结构的变更，会引起上层各种功能实现的变化。
会影响版本的演进，也间接决定了人力是否充足，版本发布是否紧张。这就是架构的魅力。


当硬件基础发生变化的时候，当业务形态发生变化之后，当数据规模变化之后。架构也会相应的变化。
架构的积木可能有：
1，协议
2，大模块
3，队列
4，组件
5，接口

数据是什么，这是根本。
算法是什么


管理的魅力在于激发人的善意和潜能，使人变得更好。确定好事情的目标，匹配人与事。让组织这个目标机器高效率运转。

架构反应了人对问题的理解。
系统的目标，系统要解决的问题，当下环境的限制，以及未来的变化。

小如一个水杯，大到整个国家，架构都是如此。